import{_ as a,c as e,o as s,V as o}from"./chunks/framework.e5c4830d.js";const k=JSON.parse('{"title":"Docker 网络","description":"","frontmatter":{},"headers":[],"relativePath":"src/maintain/docker/network.md","filePath":"src/maintain/docker/network.md"}'),n={name:"src/maintain/docker/network.md"},l=o('<h1 id="docker-网络" tabindex="-1">Docker 网络 <a class="header-anchor" href="#docker-网络" aria-label="Permalink to &quot;Docker 网络&quot;">​</a></h1><h3 id="cli" tabindex="-1">CLI <a class="header-anchor" href="#cli" aria-label="Permalink to &quot;CLI&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">network</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">命令</span></span></code></pre></div><p>命令</p><ul><li><code>ls</code> 查看所有的 docker 网络</li><li><code>create</code> 创建网络</li></ul><h3 id="网络模式" tabindex="-1">网络模式 <a class="header-anchor" href="#网络模式" aria-label="Permalink to &quot;网络模式&quot;">​</a></h3><p>bridge: 桥接(常用)</p><p>none: 不配置网络</p><p>host: 和宿主机共享</p><p>container: 容器之间直接互联</p><h3 id="自定义网络" tabindex="-1">自定义网络 <a class="header-anchor" href="#自定义网络" aria-label="Permalink to &quot;自定义网络&quot;">​</a></h3><p>自定义网络的优点在于可以直接用网络名字互 ping, 即 docker 中 hosts 会自动更新</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">network</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--subnet</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">192.168</span><span style="color:#C3E88D;">.0.0/16</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mynet</span></span></code></pre></div><p>选项</p><ul><li><code>--driver</code> 指定网络模式, 默认 bridge</li><li><code>--subnet</code> 子网掩码</li><li><code>--gateway</code> 网关, 可根据子网掩码自动生成</li></ul><h3 id="网络连接" tabindex="-1">网络连接 <a class="header-anchor" href="#网络连接" aria-label="Permalink to &quot;网络连接&quot;">​</a></h3><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">network</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">connect</span><span style="color:#A6ACCD;"> [选项] 网络 容器</span></span></code></pre></div>',17),t=[l];function c(r,p,i,d,h,C){return s(),e("div",null,t)}const u=a(n,[["render",c]]);export{k as __pageData,u as default};
