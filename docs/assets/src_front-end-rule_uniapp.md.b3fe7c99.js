import{_ as a,c as s,o as n,V as o}from"./chunks/framework.e5c4830d.js";const F=JSON.parse('{"title":"uniapp","description":"","frontmatter":{},"headers":[],"relativePath":"src/front-end-rule/uniapp.md","filePath":"src/front-end-rule/uniapp.md"}'),e={name:"src/front-end-rule/uniapp.md"},l=o(`<h1 id="uniapp" tabindex="-1">uniapp <a class="header-anchor" href="#uniapp" aria-label="Permalink to &quot;uniapp&quot;">​</a></h1><h2 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h2><h3 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-label="Permalink to &quot;生命周期&quot;">​</a></h3><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><h3 id="网页配置" tabindex="-1">网页配置 <a class="header-anchor" href="#网页配置" aria-label="Permalink to &quot;网页配置&quot;">​</a></h3><p>使用 hash 路由, 避免发生奇怪的错误. 设置 base 为<code>./</code>这样方便放置在服务器静态文件的任意位置</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// manifest.json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">h5</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">router</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">mode</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hash</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">base</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">./</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="坑" tabindex="-1">坑 <a class="header-anchor" href="#坑" aria-label="Permalink to &quot;坑&quot;">​</a></h2><h3 id="样式穿透" tabindex="-1">样式穿透 <a class="header-anchor" href="#样式穿透" aria-label="Permalink to &quot;样式穿透&quot;">​</a></h3><p>小程序组件演示不能穿透到子组件, 除非去掉 <code>scoped</code> 属性</p>`,10),p=[l];function t(r,c,i,D,h,d){return n(),s("div",null,p)}const y=a(e,[["render",t]]);export{F as __pageData,y as default};
