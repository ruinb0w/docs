import{_ as s,c as a,o as l,V as o}from"./chunks/framework.e5c4830d.js";const F=JSON.parse('{"title":"Replica Set","description":"","frontmatter":{},"headers":[],"relativePath":"src/maintain/mongodb/replica-set.md","filePath":"src/maintain/mongodb/replica-set.md"}'),n={name:"src/maintain/mongodb/replica-set.md"},p=o(`<h1 id="replica-set" tabindex="-1">Replica Set <a class="header-anchor" href="#replica-set" aria-label="Permalink to &quot;Replica Set&quot;">​</a></h1><p>replica set 顾名思义就是副本集, 每一个副本集存储的数据都是相同的, 当主副本集宕机后, 另外一个副本集会成为主副本集。</p><h2 id="配置-replica-set" tabindex="-1">配置 replica set <a class="header-anchor" href="#配置-replica-set" aria-label="Permalink to &quot;配置 replica set&quot;">​</a></h2><p>需要注意的是使用了--replica 参数后, mongodb 就会以副本集的模式启动, 如果不初始化副本集, 外部的 client 无法连接</p><h3 id="非-authorization-模式" tabindex="-1">非 authorization 模式 <a class="header-anchor" href="#非-authorization-模式" aria-label="Permalink to &quot;非 authorization 模式&quot;">​</a></h3><ol><li>创建容器</li></ol><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">docker run -d --name 容器名字 --replica r0</span></span></code></pre></div><ol start="2"><li>初始化副本集</li></ol><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">rs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">initiate</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rs0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">members</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">host</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">localhost:27017</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><blockquote><p>这里的 localhost 很重要, 不然客户端连不上</p></blockquote><h3 id="authorization-模式" tabindex="-1">authorization 模式 <a class="header-anchor" href="#authorization-模式" aria-label="Permalink to &quot;authorization 模式&quot;">​</a></h3><p>mongodb 要求在 authorization 模式下使用副本集需要使用 keyfile</p><ol><li>创建 keyfile</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">openssl</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rand</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-base64</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">756</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">keyfile</span></span></code></pre></div><ol start="2"><li>打包新的镜像, 把 keyfile 放到镜像中</li></ol><div class="language-Dockerfile"><button title="Copy Code" class="copy"></button><span class="lang">Dockerfile</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> mongo</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 将认证密钥文件复制到容器中的指定位置</span></span>
<span class="line"><span style="color:#F78C6C;">COPY</span><span style="color:#A6ACCD;"> keyfile /data/keyfile</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 设置密钥文件的权限</span></span>
<span class="line"><span style="color:#F78C6C;">RUN</span><span style="color:#A6ACCD;"> chown mongodb:mongodb /data/keyfile</span></span>
<span class="line"><span style="color:#F78C6C;">RUN</span><span style="color:#A6ACCD;"> chmod 400 /data/keyfile</span></span></code></pre></div><ol start="3"><li>启动容器</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">容器名</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">27017</span><span style="color:#C3E88D;">:27017</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">MONGO_INITDB_ROOT_USERNAME=root</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-e</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">MONGO_INITDB_ROOT_PASSWORD=toor</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">包含keyfile的镜像名</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mongod</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--replSet</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">rs0</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--keyFile</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/data/keyfile</span></span></code></pre></div><ol start="4"><li>初始化副本集</li></ol><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">rs</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">initiate</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rs0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">members</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">_id</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">host</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">localhost:27017</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">] </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><blockquote><p>这里的 localhost 很重要, 不然客户端连不上</p></blockquote>`,21),e=[p];function t(c,r,i,C,y,D){return l(),a("div",null,e)}const d=s(n,[["render",t]]);export{F as __pageData,d as default};
