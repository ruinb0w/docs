import{_ as s,c as a,o as n,V as l}from"./chunks/framework.e5c4830d.js";const A=JSON.parse('{"title":"C","description":"","frontmatter":{},"headers":[],"relativePath":"src/cs/C.md","filePath":"src/cs/C.md"}'),p={name:"src/cs/C.md"},o=l(`<h1 id="c" tabindex="-1">C <a class="header-anchor" href="#c" aria-label="Permalink to &quot;C&quot;">​</a></h1><p>C 语言中整数相除会自动去掉小数部分, 例如<code>5/9</code>会得到<code>0</code></p><p>C 语言函数传参都是复制值, 如果是一个指针，传递的是指针的地址</p><p>C 语言中将数组作为参数传递时, 传递的是第一个元素的地址</p><p>external 关键字可以声明(declaration)外部变量, 从而使用外部(其他文件)定义(definition)的变量</p><p>getchar, putchar</p><h2 id="字符串" tabindex="-1">字符串 <a class="header-anchor" href="#字符串" aria-label="Permalink to &quot;字符串&quot;">​</a></h2><p>C 语言支持字符串字面值的拼接, 不用 <code>+</code> 号, 直接放在一起即可</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">char</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> s </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">world</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>C 语言的支付串实际是一个字符数组, 并且会在字面量的最后面加一个&#39;\\0&#39;到数组中, 以表示字符串结束</p><p>下面这个函数会在遇到&#39;\\0&#39;时停止</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">strlen</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">char</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">s</span><span style="color:#C792EA;">[]</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> i</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">s</span><span style="color:#89DDFF;">[</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">]</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\0</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">   </span><span style="color:#89DDFF;">++</span><span style="color:#F07178;">i</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> i</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="enum" tabindex="-1">enum <a class="header-anchor" href="#enum" aria-label="Permalink to &quot;enum&quot;">​</a></h2><p>enumm 是一个整数的枚举</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">enum</span><span style="color:#A6ACCD;"> boolean </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> NO</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> YES </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// NO == 0, YES == 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">enum</span><span style="color:#A6ACCD;"> escapes </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> BELL </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\a</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> BACKSPACE </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\b</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> TAB </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\t</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">  NEWLINE </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> VTAB </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\v</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> RETURN </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">\\r</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 可以自定义数值</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">enum</span><span style="color:#A6ACCD;"> months </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> JAN </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> FEB</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> MAR</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> APR</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> MAY</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> JUN</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">  JUL</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> AUG</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> SEP</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> OCT</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> NOV</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> DEC </span><span style="color:#89DDFF;">};</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 指定第一个的值, 后面就会继续</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// FEB=2, MAR=3 ...</span></span></code></pre></div><h2 id="静态变量" tabindex="-1">静态变量 <a class="header-anchor" href="#静态变量" aria-label="Permalink to &quot;静态变量&quot;">​</a></h2><p>静态变量通过<code>static</code>关键字声明, 静态变量有两个主要用途:</p><ol><li>隐藏与隔离</li><li>保持变量内容的持久性</li></ol><h3 id="隐藏与隔离" tabindex="-1">隐藏与隔离 <a class="header-anchor" href="#隐藏与隔离" aria-label="Permalink to &quot;隐藏与隔离&quot;">​</a></h3><p>下面是一个全局变量的例子, 我们可以直接在 file2 中直接使用 file1 中定义的全局变量</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//file1.c</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> count </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//file2.c</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">count </span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">count = %d</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> count</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 1</span></span></code></pre></div><p>如果把 count 用 static 声明, file2 就需要 external 关键字来引入 count</p><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//file1.c</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">static</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> count </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//file2.c</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">extern</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> count</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">count </span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">count = %d</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> count</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 1</span></span></code></pre></div><h3 id="保持变量内容的持久性" tabindex="-1">保持变量内容的持久性 <a class="header-anchor" href="#保持变量内容的持久性" aria-label="Permalink to &quot;保持变量内容的持久性&quot;">​</a></h3>`,24),e=[o];function t(c,r,F,y,D,i){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
